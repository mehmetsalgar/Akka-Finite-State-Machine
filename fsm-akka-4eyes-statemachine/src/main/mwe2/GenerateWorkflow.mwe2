module org.salgar.akka.fsm.org.salgar.fsm.akka.foureyes

var javaPath = "src"

Workflow {
	bean = org.salgar.akka.fsm.xtend.uml.engine.UmlGeneratorStandaloneSetup : setupScala {
        config = {
            javaGenPath = "target/generated-sources/main/scala"
            rootClass = "org.salgar.akka.fsm.xtend.uml.templates.ScalaRoot"
        }
        doInit = true
    }

    bean = org.salgar.akka.fsm.xtend.uml.engine.UmlGeneratorStandaloneSetup : setupJava {
        config = {
            javaGenPath = "target/generated-sources/main/java"
            rootClass = "org.salgar.akka.fsm.xtend.uml.templates.JavaRoot"
        }
        doInit = true
    }

    bean = org.salgar.akka.fsm.xtend.uml.engine.UmlGeneratorStandaloneSetup : setupTestJava {
        config = {
            javaGenPath = "target/generated-sources/test/java"
            rootClass = "org.salgar.akka.fsm.xtend.uml.templates.JavaTestRoot"
        }
        doInit = true
    }

    component =  org.salgar.akka.fsm.xtext.reader.XTextReader : scalaReader  {
        useJavaClassPath = true
        uriFilter = org.eclipse.xtext.mwe.NameBasedFilter {
            regularExpression = '4eyes.*\\.uml'
        }

        register = setupScala
        loadResource = {
            slot = "modelSlot"
        }
    }

    component =  org.salgar.akka.fsm.xtext.reader.XTextReader : javaReader  {
        useJavaClassPath = true
        uriFilter = org.eclipse.xtext.mwe.NameBasedFilter {
            regularExpression = '4eyes.*\\.uml'
        }

        register = setupJava
        loadResource = {
            slot = "modelSlot"
        }
    }

    component =  org.salgar.akka.fsm.xtext.reader.XTextReader : javaTestReader  {
        useJavaClassPath = true
        uriFilter = org.eclipse.xtext.mwe.NameBasedFilter {
            regularExpression = '4eyes.*\\.uml'
        }

        register = setupTestJava
        loadResource = {
            slot = "modelSlot"
        }
    }

	component = org.eclipse.emf.mwe.utils.DirectoryCleaner : scalaCleaner {
		directory = "target/generated-sources/main/scala"
	}

	component = org.eclipse.emf.mwe.utils.DirectoryCleaner : javaCleaner {
        directory = "target/generated-sources/main/java"
    }

	component = org.eclipse.emf.mwe.utils.DirectoryCleaner : javaTestCleaner {
        directory = "target/generated-sources/test/java"
    }

	component = org.salgar.akka.fsm.xtend.uml.generator.FsmAkkaGeneratorComponent : scalaGenerator {
		register = setupScala
        slot = 'modelSlot'
        globalVar = {
            name = "targetSourceStateSeperator" value = "_$$_"
        }
        globalVar = {
                name = "submachineSeperator" value = "_$_"
        }
        outlet = {
            path = "target/generated-sources/main/scala"
        }
        outlet = {
        	outletName = "gen-once"
            path = javaPath
        }
    }

    component = org.salgar.akka.fsm.xtend.uml.generator.FsmAkkaGeneratorComponent : javaGenerator {
        register = setupJava
        slot = 'modelSlot'
        globalVar = {
            name = "targetSourceStateSeperator" value = "_$$_"
        }
        globalVar = {
                name = "submachineSeperator" value = "_$_"
        }
        outlet = {
            path = "target/generated-sources/main/java"
        }
        outlet = {
            outletName = "gen-once"
            path = javaPath
        }
    }

    component = org.salgar.akka.fsm.xtend.uml.generator.FsmAkkaGeneratorComponent : javaTestGenerator {
        register = setupTestJava
        slot = 'modelSlot'
        globalVar = {
            name = "targetSourceStateSeperator" value = "_$$_"
        }
        globalVar = {
                name = "submachineSeperator" value = "_$_"
        }
        outlet = {
            path = "target/generated-sources/test/java"
        }
        outlet = {
            outletName = "gen-once"
            path = javaPath
        }
    }
}